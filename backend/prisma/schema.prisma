// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id               Int      @id @default(autoincrement())
  username         String   @unique
  email            String   @unique
  email42          String?  @unique
  password         String
  avatar           String?
  twoFAEnabled     Boolean  @default(false)
  status           String   @default("inactive")
  victoriesCount   Int      @default(0)
  defeatCount      Int      @default(0)
  rank             String   @default("Noobie")
  level            Int      @default(0)
  achievements     Json?
  friends          User[]   @relation("Friends")
  symetric_friend  User[]   @relation("Friends")
  games            Game[]
  JoinedChatChannels     ChatChannel[] @relation("JoinedChannels")
  OwnedChatChannels      ChatChannel[] @relation("OwnedChannels")
  BannedFromChatChannels ChatChannel[] @relation("BannedFromChannels")
  chatMessages     ChatMessage[]
  createdAt        DateTime @default(now())
}

model ChatChannel {
  id         Int       @id @default(autoincrement())
  owner      User      @relation("OwnedChannels", fields: [ownerId], references: [id])
  ownerId    Int
  password   String?
  channelType String?
  name       String?
  participants User[] @relation("JoinedChannels")
  bannedUsers User[] @relation("BannedFromChannels")
  messages ChatMessage[]
}

model ChatMessage {
  id          Int      @id @default(autoincrement())
  channel     ChatChannel @relation(fields: [channelId], references: [id])
  channelId   Int
  sender      User @relation(fields: [senderId], references: [id])
  senderId    Int
  content     String
  createdAt   DateTime @default(now())
}

model Game {
  id         Int      @id @default(autoincrement())
  players    User[]
  gameData   Json?
  status     String @default("Created")
  createdAt  DateTime @default(now())
}
